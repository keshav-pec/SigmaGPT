#!/bin/bash

# SigmaGPT Free Deployment Verification Script
echo "üîç SigmaGPT Deployment Verification"
echo "==================================="
echo ""

# Get URLs from user
read -p "Enter your Render backend URL (e.g., https://sigmagpt-backend-xxx.onrender.com): " BACKEND_URL
read -p "Enter your Vercel frontend URL (e.g., https://sigmagpt-xxx.vercel.app): " FRONTEND_URL

echo ""
echo "üß™ Testing Backend..."

# Test backend health
HEALTH_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${BACKEND_URL}/api/health")
if [ "$HEALTH_RESPONSE" = "200" ]; then
    echo "‚úÖ Backend health check: PASSED"
else
    echo "‚ùå Backend health check: FAILED (HTTP $HEALTH_RESPONSE)"
fi

# Test CORS
CORS_RESPONSE=$(curl -s -H "Origin: ${FRONTEND_URL}" -H "Access-Control-Request-Method: POST" -H "Access-Control-Request-Headers: Content-Type" -X OPTIONS "${BACKEND_URL}/api/conversations")
if [[ $CORS_RESPONSE == *"Access-Control-Allow-Origin"* ]]; then
    echo "‚úÖ CORS configuration: PASSED"
else
    echo "‚ùå CORS configuration: FAILED"
fi

echo ""
echo "üß™ Testing Frontend..."

# Test frontend
FRONTEND_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "${FRONTEND_URL}")
if [ "$FRONTEND_RESPONSE" = "200" ]; then
    echo "‚úÖ Frontend loading: PASSED"
else
    echo "‚ùå Frontend loading: FAILED (HTTP $FRONTEND_RESPONSE)"
fi

echo ""
echo "üìã Manual Testing Checklist:"
echo "‚ñ° Visit ${FRONTEND_URL}"
echo "‚ñ° Check homepage animations load"
echo "‚ñ° Try creating a new chat"
echo "‚ñ° Send a test message"
echo "‚ñ° Verify Puter.js response"
echo "‚ñ° Test on mobile device"
echo ""
echo "üéâ If all tests pass, your SigmaGPT is live!"